/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package juego;

import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.JButton;
import javax.swing.JOptionPane;

/**
 *
 * @author Manuela Gomez
 */
public class VentanaJuego extends javax.swing.JFrame implements ActionListener {

    JButton[][] botones;
    private Controlador controlador;

    /**
     * Creates new form VentanaJuego
     */
    public VentanaJuego(int filas, int columnas) {
        initComponents();
        setLocationRelativeTo(this);
        botones = new JButton[filas][columnas];
        controlador = new Controlador(filas, columnas);
        cargarBotones();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelBotones = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        panelBotones.setBackground(new java.awt.Color(0, 0, 0));

        javax.swing.GroupLayout panelBotonesLayout = new javax.swing.GroupLayout(panelBotones);
        panelBotones.setLayout(panelBotonesLayout);
        panelBotonesLayout.setHorizontalGroup(
            panelBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 619, Short.MAX_VALUE)
        );
        panelBotonesLayout.setVerticalGroup(
            panelBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 468, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelBotones, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelBotones, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel panelBotones;
    // End of variables declaration//GEN-END:variables

    @Override
    public void actionPerformed(ActionEvent ae) {

        for (int i = 0; i < botones.length; i++) {
            for (int j = 0; j < botones[i].length; j++) {

                if (ae.getSource().equals(botones[i][j])) {
                    Casilla casilla = controlador.obtenerPosicion(i, j);
                    if (casilla.getEstado().equals(Casilla.LIBRE)) {
                        botones[i][j].setVisible(false);
                    }

                    if (casilla.getEstado().equals(Casilla.BOMBA)) {
                        String respuesta = JOptionPane.showInputDialog("Â¿Desea jugar nuevamente? Ingrese si o no");

                        if (respuesta == null) {
                            this.dispose();
                            break;
                        }
                        
                        if (respuesta.equalsIgnoreCase("si")) {
                            this.dispose();
                            VentanaInicio ventana = new VentanaInicio();
                            ventana.setVisible(true);

                        } else if (respuesta.equalsIgnoreCase("no")) {
                            this.dispose();
                            
                        } else {
                            this.dispose();
                        }
                    }
                }
            }
        }
    }
    

    private void cargarBotones() {
        int ancho = 60;
        int alto = 40;
        int separado = 20;
        int texto = 1;
        for (int i = 0; i < botones.length; i++) {
            for (int j = 0; j < botones[i].length; j++) {
                botones[i][j] = new JButton();
                botones[i][j].setBounds(
                        (j * ancho + separado),
                        (i * alto + separado),
                        ancho, alto);
                botones[i][j].setText(String.valueOf(texto));
                botones[i][j].addActionListener(this);
                panelBotones.add(botones[i][j]);
                botones[i][j].setBackground(Color.GREEN);
                texto++;
            }
        }
    }

}
